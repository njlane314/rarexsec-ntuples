#!/usr/bin/env bash
set -euo pipefail

DATA_DIR="@RAREXSEC_TEST_BINARY_DIR@/snapshot_imt"
INPUT_FILE="${DATA_DIR}/input.root"
OUTPUT_FILE="${DATA_DIR}/snapshot.root"
CONFIG_FILE="${DATA_DIR}/config.json"
LOG_FILE="${DATA_DIR}/snapshot.log"
MACRO_PATH="@RAREXSEC_TEST_SOURCE_DIR@/tests/integration/create_test_sample.C"
SNAPSHOT_ANALYSIS="@RAREXSEC_SNAPSHOT_ANALYSIS_EXEC@"
ROOT_EXEC="@RAREXSEC_ROOT_EXECUTABLE@"

rm -rf "${DATA_DIR}"
mkdir -p "${DATA_DIR}"

"${ROOT_EXEC}" -l -b -q "${MACRO_PATH}(\"${INPUT_FILE}\")"

if [[ ! -f "${INPUT_FILE}" ]]; then
    echo "Failed to generate test input file" >&2
    exit 1
fi

INPUT_BASENAME="$(basename "${INPUT_FILE}")"

cat > "${CONFIG_FILE}" <<JSON
{
  "ntuple_base_directory": "${DATA_DIR}",
  "run_configurations": {
    "test-beam": {
      "run1": {
        "nominal_triggers": 1,
        "samples": [
          {
            "sample_key": "test_sample",
            "sample_type": "data",
            "relative_path": "${INPUT_BASENAME}",
            "triggers": 1
          }
        ]
      }
    }
  }
}
JSON

"${SNAPSHOT_ANALYSIS}" "${CONFIG_FILE}" "test-beam" "run1" "" "${OUTPUT_FILE}" >"${LOG_FILE}" 2>&1

if grep -q "TDirectoryFile::mkdir" "${LOG_FILE}"; then
    echo "Encountered TDirectoryFile::mkdir error during snapshot" >&2
    cat "${LOG_FILE}" >&2
    exit 1
fi

python3 - <<PY
import ROOT
import sys

output_file = r"${OUTPUT_FILE}"
tree_path = "samples/test-beam/run1/data/test_sample/nominal/events"

f = ROOT.TFile.Open(output_file)
if not f or f.IsZombie():
    print(f"Failed to open snapshot output {output_file}", file=sys.stderr)
    sys.exit(1)

tree = f.Get(tree_path)
if not tree:
    print("Expected events tree not found in snapshot", file=sys.stderr)
    sys.exit(1)
PY
